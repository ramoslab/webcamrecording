cmake_minimum_required(VERSION 2.8)

# Set comiler options (version 2011)
if (CMAKE_VERSION VERSION_LESS "3.1")
   if (CMAKE_CXX_COMPILER STREQUAL "GNU")
      set (CMAKE_CXX_FLAGS "-std=gnu++11 ${CMAKE_CXX_FLAGS}")
   else ()
      set(CMAKE_CXX_FLAGS "-std=c++11")
   endif ()
endif ()

project( webcam )
# Find and include OpenCV
find_package(OpenCV REQUIRED)
include_directories( ${OpenCV_INCLUDE_DIRS} )
# Find and include pthread
find_package(Threads REQUIRED)

# Find libconfig
#find_package(libconfig REQUIRED)
#include_directories( ${LIBCONFIG_INCLUDE_DIRS} )
# Find libconfig++
find_package(libconfig++ REQUIRED)
include_directories( ${LIBCONFIG++_INCLUDE_DIRS} )

# Workaround for compiling. There is a file missing on Debian that specifies these Variables (LIBCONFIG_LIBRARIES)
if (CONFIG_FOUND)
   set(LIBCONFIG_LIBRARIES "config")
endif()

if (CONFIG++_FOUND)
   set(LIBCONFIG++_LIBRARIES "config++")
endif()

# Find include files and source files
include_directories(../include)
file(GLOB SOURCES "../sources/*.cpp")
# Add executable to the makefile
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY executable)
add_executable( webcam_server ${SOURCES} )
# Configure linker
target_link_libraries( webcam_server ${OpenCV_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${LIBCONFIG++_LIBRARIES})
